#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: LinSir
#=================================================

name: Openwrt_Build_x86_64_aio

on: 
  release:
    types: [published]
  push:
    branches: 
      - master
  schedule:
    - cron: 0 0 */11 * *
  watch:
    types: [started]

jobs:
  build_openwrt:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
    
    - name: Cache
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'
        prefix: ${{ github.workspace }}/openwrt
        
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
    - name: Import external feeds
      working-directory: ./openwrt
      run: |
        git clone https://github.com/kenzok8/small.git package/small
        git clone https://github.com/kenzok8/openwrt-packages.git package/kenzo
       # git clone 其他github插件源码地址 package/文件夹名称
        
    - name: Configuration Customization - Build_x86_64_aio
      env:
        CONFIG_FILE: 'x86_64_aio.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && make defconfig
     
    # 云menuconfig（SSH 连接到 Actions进行menuconfig），去掉下面2行代码前面的#即可使用
    # 复制 SSH 连接命令粘贴到终端内执行，或者复制链接在浏览器中打开使用网页终端。（网页终端可能会遇到黑屏的情况，按 Ctrl + C 即可）
    # 然后输入cd openwrt && make menuconfig
    # 完成后按快捷键Ctrl+D或执行exit命令退出，后续编译工作将自动进行。
    #- name: SSH connection to Actions
    #  uses: superstarfly/debugger-action@master
       
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) || make -j1 V=s
        
    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt
        path: openwrt/bin
